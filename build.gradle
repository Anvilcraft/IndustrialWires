def mainVersion = "1.5"
def buildNumber = "15"

// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = "${mainVersion}-${buildNumber}"
group= "malte0811"
archivesBaseName = "IndustrialWires"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "14.21.1.2443"
    runDir = "run"

    replace '${version}', project.version
    mappings = "snapshot_20170628"
}

repositories {
    maven {
        name 'ic2'
        url 'http://maven.ic2.player.to/'
    }
    maven {
        name 'tr'
        url 'http://maven.modmuss50.me'
    }
    maven {
    	name 'jared maven'
    	url 'http://blamejared.com/maven'
    }
    // dependencies of TR...
    maven {
        url 'http://maven.epoxide.xyz'
    }
    maven {
        // HWYLA
        name "TehNut"
        url "http://tehnut.info/maven/"
    }
}

dependencies {
    compileOnly 'net.industrial-craft:industrialcraft-2:2.8.+'
    deobfCompile "blusunrize:ImmersiveEngineering:0.12-+:deobf"
    compileOnly "TechReborn:TechReborn-1.12:2.6.+:dev"
    compileOnly "RebornCore:RebornCore-1.12:3.2.+:dev"
}

jar {
	from 'LICENSE'
    manifest {
        
    }
}

task signMain(type: SignJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }
    dependsOn reobfJar
    if (project.hasProperty('keyStore')) {
        keyStore = project.keyStore
        alias = project.storeAlias
        storePass = project.storePass
        keyPass = project.storePass
        inputFile = jar.archivePath
        outputFile = jar.archivePath
    }
}

build.dependsOn signMain

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
